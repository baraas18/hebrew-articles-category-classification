import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import pickle
import re
from tqdm import tqdm

# Read the data into a dataframe
df = pd.read_csv('texts.csv')

# Check for imbalances in the data
counts_sport = df["sport"].value_counts()
counts_entertainment = df["entertainment"].value_counts()
counts_economy = df["economy"].value_counts()
counts_health = df["health"].value_counts()
counts_car = df["car"].value_counts()
counts_food = df["food"].value_counts()
counts_vacation = df["vacation"].value_counts()
counts_dating = df["dating"].value_counts()
counts_parents = df["parents"].value_counts()
counts_environment_science = df["environment-science"].value_counts()

print("Sport:", counts_sport)
print("Entertainment:", counts_entertainment)
print("Economy:", counts_economy)
print("Health:", counts_health)
print("Car:", counts_car)
print("Food:", counts_food)
print("Vacation:", counts_vacation)
print("Dating:", counts_dating)
print("Parents:", counts_parents)
print("Environment-Science:", counts_environment_science)

# Remove "vacation" and "environment-science" categories due to lack of support articles
categories = ["sport", "entertainment", "economy", "health", "car", "food", "dating", "parents"]

df = df[df["vacation"] != 1]
df = df[df["environment-science"] != 1]
df = df[["text"] + categories]
df.reset_index(drop=True, inplace=True)

# Convert the categories columns into a single column
df['category'] = df[categories].idxmax(axis=1)
df['category'] = df['category'].where(df['category'] != 0, other=None)
df = df.drop(columns=categories)

# Encode the categories into numbers
category_mapping = {category: idx for idx, category in enumerate(df['category'].unique())}
df['category_encoded'] = df['category'].map(category_mapping)

# Remove the stop words from the texts
hebrew_stop_words = ['תא', 'אל', 'לש', 'ינא', 'לע', 'הז', 'םע', 'לכ', 'אוה', 'םא', 'וא', 'םג', 'רתוי', 'שי', 'יל', 'המ', 'לבא', 'םורופ', 'זא', 'בוט', 'קר', 'יכ', 'ילש', 'היה', 'םורופב', 'ןיא', 'דוע', 'איה', 'דחא', 'ב', 'ל', 'דע', 'ךל', 'ומכ', 'תויהל', 'התא', 'המכ', 'ונחנא', 'םה', 'רבכ', 'םישנא', 'רשפא', 'הדות', 'אלש', 'ותוא', 'ה', 'דואמ', 'הברה', 'אלו', 'שממ', 'ול', 'א', 'ימ', 'םייח', 'תיב', 'ינאש', 'לוכי', 'אוהש', 'ךכ', 'הזה', 'ךיא', 'םויה', 'תצק', 'וישכע', 'םש', 'לכב', 'היהי', 'דימת', 'י', 'ךלש', 'יכה', 'ש', 'וב', 'תושעל', 'ךירצ', 'ןכ', 'םעפ', 'םכל', 'ינאו', 'והשמ', 'לא', 'ולש', 'שיש', 'ו', 'םגו', 'םכתא', 'ירחא', 'אשונב', 'ידכ', 'טושפ', 'ינפל', 'הזש', 'יתוא', 'ונא', 'המל', 'רבד', 'כ', 'ןאכ', 'ילוא', 'םיבוט', 'הצור', 'הנש', 'ילעב', 'םייחה', 'ןעמל', 'םתא', 'מ', 'ןיב', 'םוי', 'תאז', 'הזיא', 'רתויב', 'הל', 'תחא', 'לכה',
'םימורופה', 'לכל', 'אלא', 'הפ', 'עדוי', 'םולש', 'תוקד', 'ונל', 'הנשה', 'ךרד', 'םדא', 'הארנ', 'וז', 'הדיחיה', 'םיצור', 'ללכב', 'הבוט', 'ונלש', 'םאה', 'יתייה', 'בלה', 'ויה', 'ח', 'תורדש', 'ילב', 'םהל', 'התאש', 'התוא', 'םוקמ', 'םתאו', 'קלח', 'ןב', 'ואוב', 'רחא', 'תחאה', 'ךתוא', 'ןבומכ', 'ללגב', 'תמאב', 'והשימ', 'םידלי', 'םתוא', 'םורופה', 'חופיט', 'הזו', 'ר', 'םהש', 'ךא', 'ןימזמ', 'לארשי', 'סוכ', 'ןמז', 'דועו', 'םידליה', 'ןיידע', 'הזכ', 'השוע', 'םוש', 'תחקל', 'םלועה', 'זופת', 'תוארל',
'םורופל', 'לכו', 'לבקל', 'ןוכנ', 'אצוי', 'םלועל', 'לודג', 'וליפא', 'ןתינ', 'ינש', 'לכוא', 'השק', 'קחשמ', 'םויב', 'הככ', 'אמא', 'תב', 'עובשה', 'םיפסונ', 'יבגל', 'תיבב', 'תרחא', 'יפל', 'אלל', 'םינש', 'ןמזה', 'ןמש', 'טעמ', 'תוחפל', 'ףא', 'בוש', 'םהלש', 'םוקמב', 'םלוכ', 'תיעונ', 'אבה', 'לעמ', 'בל', 'ןומה', 'רבדל', 'ע', 'בהוא', 'םיפיסומ', 'יצח', 'רקיעב', 'תופכ', 'םימעפל', 'איהש', 'תלהנה', 'לעו', 'ק', 'םיבהוא', 'ת', 'תעדוי', 'ד', 'עורג', 'ונחנאש', 'םימ', 'םידליל', 'ץראב', 'עידומ', 'חמשא', 'םכלש', 'תוחפ', 'םלוכל', 'יד', 'הבהא', 'הלוכי', 'םירבד', 'הליהקה', 'רוזעל', 'םיטרפ', 'קוידב', 'חלמ', 'לק', 'ישארה', 'הלש', 'ףיסוהל', 'ינשה', 'יתעדל', 'רב', 'תורמל', 'םגש', 'םינמזומ', 'רחאל', 'המב', 'בשוח', 'דאמ', 'הפי', 'םישגהל', 'שדח', 'ןטק', 'םישפחמ', 'חמש', 'םירבדמ', 'םאו', 'דחוימב', 'הדובע', 'ידמ', 'זאו', 'בושח', 'םאש', 'תבהוא', 'םימעפ', 'תלהנמ', 'רמוא', 'לומ', 'רשק', 'להנמ', 'היהיש', 'ןיאש', 'ונאש', 'הבהאה', 'ס', 'ופרטצה', 'תיפכ', 'ליבשב', 'םיגחה', 'ןפוא', 'תתל', 'ףכ', 'ךותב', 'רכוס', 'ליג', 'החלצהב', 'אוהו', 'הווקמ', 'םתס', 'שיו', 'דגנ', 'טעמכ', 'תאש', 'הלוע', 'יא', 'רפסמ', 'ןושאר', 'ךרדל', 'היהנ', 'בצעל', 'םישוע', 'להנלו', 'התיה',
'וילע', 'הזמ', 'התייה', 'אב', 'סרפב', 'תולח', 'שאר', 'םינימזמ', 'םיפיט', 'יבכמ', 'הבר', 'םירוה', '‡', 'הרקמ', 'ןרק', 'חלצומה', 'עיגהל', 'הלודג', 'הארנכ', 'רישמחה', 'ןושארה', 'לפלפ', 'קחשמה', 'ןאכו', 'תעדל', 'תאו', 'םיעורג', 'רפס', 'בגא', 'םירחא', 'דיגהל', 'זופתב', 'םלועהו', 'הנפוא', 'אקווד', 'קיפסמ', 'תועש', 'תונומת', 'ונחנאשכ', 'דלוקוש', 'ןכלו', 'ג', 'אורקל', 'לוהינל', 'עובש', 'יפויו', 'םולח', 'הב', 'היהש', 'הלאש', 'המוקמ', 'וזה', 'םימורופב', 'שדחה', 'םיצמאתמ', 'ןקחש', 'םיניזמש',
'תמשנ', 'ךרעב', 'לכמ', 'המו', 'לגר', 'ףסכ', 'האור', 'הנטק', 'לצב', 'םלועב', 'טנרטניא', 'ץוח', 'רורב', 'ךלוה', 'תבשוח', 'הזל', 'םולכ', 'ןה', 'הלאכ', 'חוטב', 'רבדה', 'היהת', 'עיגמ', 'ףוס', 'תמאה', 'ונממ', 'לכימ', 'השדחה', 'םורתל', 'םישנאה', 'דעו', 'ךרדב', 'ילצא', 'םירוהה', 'ינב', 'ךותמ', 'רשאכ', 'דבל', 'יתיאר', 'בצמ', 'אלמ', 'רוחבל', 'חמשנ', 'גחה', 'ער', 'ףוע', 'ןמ', 'איבהל', 'יתאצמ', 'תובותכ', 'ןיינעמ', 'הכירצ', 'סנכהל', 'ןיטולחל', 'העש', 'ןוכתמ', 'םדוק', 'תובושת', 'רבודמ', 'לוהינ', 'לזמ', 'יאדכ', 'ויהי', 'תועדוהה', 'רקוב', 'תוולינ', 'הפיא', 'היעב', 'חמק', 'תכלל', 'םימורופ', 'רמא', 'אשונ', 'הנכהה', 'השקבב', 'לכש', 'תאזה', 'קחשמל', 'הנינפ', 'תורחת', 'רבח', 'תונקל', 'םהמ', 'עגר', 'םרג', 'ולא', 'ומצע', 'שארמ', 'בלכה', 'ונלוכ', 'ףידע', 'ותיא', 'לשמל', 'לשבל', 'ימל', 'תונויער', 'גולבה', 'בור', 'ביבא', 'עגרכ', 'ףוסב', 'הלא', 'גחל', 'ץורע', 'הווש', 'ןפואב', 'ןימאמ', 'ןבל', 'הזב', 'דובכה', 'שארל', 'ם', 'ימי', 'רוחש', 'הרוצב', 'דומעב', 'םעו', 'יצחו', 'הלאה', 'הנומת',
'בלשב', 'םיקחשמ', 'ונ','את', 'לא', 'של', 'אני', 'על', 'זה', 'עם', 'כל', 'הוא', 'אם', 'או', 'גם', 'יותר', 'יש', 'לי', 'מה', 'אבל', 'פורום', 'אז', 'טוב', 'רק', 'כי', 'שלי', 'היה', 'בפורום', 'אין', 'עוד', 'היא', 'אחד', 'ב', 'ל', 'עד', 'לך', 'כמו', 'להיות', 'אתה', 'כמה', 'אנחנו', 'הם', 'כבר', 'אנשים', 'אפשר', 'תודה', 'שלא', 'אותו', 'ה', 'מאוד', 'הרבה', 'ולא', 'ממש', 'לו', 'א', 'מי', 'חיים', 'בית', 'שאני', 'יכול', 'שהוא', 'כך', 'הזה', 'איך', 'היום', 'קצת', 'עכשיו', 'שם', 'בכל', 'יהיה', 'תמיד', 'י', 'שלך', 'הכי', 'ש', 'בו', 'לעשות', 'צריך', 'כן', 'פעם', 'לכם', 'ואני', 'משהו', 'אל', 'שלו', 'שיש', 'ו', 'וגם', 'אתכם', 'אחרי', 'בנושא', 'כדי', 'פשוט', 'לפני', 'שזה', 'אותי', 'אנו', 'למה', 'דבר', 'כ', 'כאן', 'אולי', 'טובים', 'רוצה', 'שנה', 'בעלי', 'החיים', 'למען', 'אתם', 'מ', 'בין', 'יום', 'זאת', 'איזה', 'ביותר', 'לה', 'אחת', 'הכל',
'הפורומים', 'לכל', 'אלא', 'פה', 'יודע', 'שלום', 'דקות', 'לנו', 'השנה', 'דרך', 'אדם', 'נראה', 'זו', 'היחידה', 'רוצים', 'בכלל', 'טובה', 'שלנו', 'האם', 'הייתי', 'הלב', 'היו', 'ח', 'שדרות', 'בלי', 'להם', 'שאתה', 'אותה', 'מקום', 'ואתם', 'חלק', 'בן', 'בואו', 'אחר', 'האחת', 'אותך', 'כמובן', 'בגלל', 'באמת', 'מישהו', 'ילדים', 'אותם', 'הפורום', 'טיפוח', 'וזה', 'ר', 'שהם', 'אך', 'מזמין', 'ישראל', 'כוס', 'זמן', 'ועוד', 'הילדים', 'עדיין', 'כזה', 'עושה', 'שום', 'לקחת', 'העולם', 'תפוז', 'לראות',
'לפורום', 'וכל', 'לקבל', 'נכון', 'יוצא', 'לעולם', 'גדול', 'אפילו', 'ניתן', 'שני', 'אוכל', 'קשה', 'משחק', 'ביום', 'ככה', 'אמא', 'בת', 'השבוע', 'נוספים', 'לגבי', 'בבית', 'אחרת', 'לפי', 'ללא', 'שנים', 'הזמן', 'שמן', 'מעט', 'לפחות', 'אף', 'שוב', 'שלהם', 'במקום', 'כולם', 'נועית', 'הבא', 'מעל', 'לב', 'המון', 'לדבר', 'ע', 'אוהב', 'מוסיפים', 'חצי', 'בעיקר', 'כפות', 'לפעמים', 'שהיא', 'הנהלת', 'ועל', 'ק', 'אוהבים', 'ת', 'יודעת', 'ד', 'גרוע', 'שאנחנו', 'מים', 'לילדים', 'בארץ', 'מודיע', 'אשמח', 'שלכם', 'פחות', 'לכולם', 'די', 'אהבה', 'יכולה', 'דברים', 'הקהילה', 'לעזור', 'פרטים', 'בדיוק', 'מלח', 'קל', 'הראשי', 'שלה', 'להוסיף', 'השני', 'לדעתי', 'בר', 'למרות', 'שגם', 'מוזמנים', 'לאחר', 'במה', 'חושב', 'מאד', 'יפה', 'להגשים', 'חדש', 'קטן', 'מחפשים', 'שמח', 'מדברים', 'ואם', 'במיוחד', 'עבודה', 'מדי', 'ואז', 'חשוב', 'שאם', 'אוהבת', 'פעמים', 'מנהלת', 'אומר', 'מול', 'קשר', 'מנהל', 'שיהיה', 'שאין', 'שאנו', 'האהבה', 'ס', 'הצטרפו', 'כפית', 'בשביל', 'החגים', 'אופן', 'לתת', 'כף', 'בתוך', 'סוכר', 'גיל', 'בהצלחה', 'והוא', 'מקווה', 'סתם', 'ויש', 'נגד', 'כמעט', 'שאת', 'עולה', 'אי', 'מספר', 'ראשון', 'לדרך', 'נהיה', 'לעצב', 'עושים', 'ולנהל', 'היתה',
'עליו', 'מזה', 'הייתה', 'בא', 'בפרס', 'חלות', 'ראש', 'מזמינים', 'טיפים', 'מכבי', 'רבה', 'הורים', '‡', 'מקרה', 'קרן', 'המוצלח', 'להגיע', 'גדולה', 'כנראה', 'החמשיר', 'הראשון', 'פלפל', 'המשחק', 'וכאן', 'לדעת', 'ואת', 'גרועים', 'ספר', 'אגב', 'אחרים', 'להגיד', 'בתפוז', 'והעולם', 'אופנה', 'דווקא', 'מספיק', 'שעות', 'תמונות', 'כשאנחנו', 'שוקולד', 'ולכן', 'ג', 'לקרוא', 'לניהול', 'שבוע', 'ויופי', 'חלום', 'בה', 'שהיה', 'שאלה', 'מקומה', 'הזו', 'בפורומים', 'החדש', 'מתאמצים', 'שחקן', 'שמזינים',
'נשמת', 'בערך', 'מכל', 'ומה', 'רגל', 'כסף', 'רואה', 'קטנה', 'בצל', 'בעולם', 'אינטרנט', 'חוץ', 'ברור', 'הולך', 'חושבת', 'לזה', 'כלום', 'הן', 'כאלה', 'בטוח', 'הדבר', 'תהיה', 'מגיע', 'סוף', 'האמת', 'ממנו', 'מיכל', 'החדשה', 'לתרום', 'האנשים', 'ועד', 'בדרך', 'אצלי', 'ההורים', 'בני', 'מתוך', 'כאשר', 'לבד', 'ראיתי', 'מצב', 'מלא', 'לבחור', 'נשמח', 'החג', 'רע', 'עוף', 'מן', 'להביא', 'מצאתי', 'כתובות', 'מעניין', 'צריכה', 'להכנס', 'לחלוטין', 'שעה', 'מתכון', 'קודם', 'תשובות', 'מדובר', 'ניהול', 'מזל', 'כדאי', 'יהיו', 'ההודעות', 'בוקר', 'נילוות', 'איפה', 'בעיה', 'קמח', 'ללכת', 'פורומים', 'אמר', 'נושא', 'ההכנה', 'בבקשה', 'שכל', 'הזאת', 'למשחק', 'פנינה', 'תחרות', 'חבר', 'לקנות', 'מהם', 'רגע', 'גרם', 'אלו', 'עצמו', 'מראש', 'הכלב', 'כולנו', 'עדיף', 'איתו', 'למשל', 'לבשל', 'למי', 'רעיונות', 'הבלוג', 'רוב', 'אביב', 'כרגע', 'בסוף', 'אלה', 'לחג', 'ערוץ', 'שווה', 'באופן', 'מאמין', 'לבן', 'בזה', 'הכבוד', 'לראש', 'ם', 'ימי', 'שחור', 'בצורה', 'בעמוד', 'ועם', 'וחצי', 'האלה', 'תמונה',
'בשלב', 'משחקים', 'נו']

def replace_whole_word(string, word_to_replace, replacement):
    # Construct regular expression to match whole word
    pattern = r'\b{}\b'.format(re.escape(word_to_replace))
    # Use sub function to replace matched whole word
    return re.sub(pattern, replacement, string)

for stop_word in tqdm(hebrew_stop_words):
    df['text'] = df['text'].apply(lambda x: replace_whole_word(x, stop_word, ''))


##############################################################################


# Models imports
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report, confusion_matrix

# Vectorize the "text" column into vectors (this is the input data X)
vectorizer = TfidfVectorizer(stop_words=hebrew_stop_words)
X = vectorizer.fit_transform(df['text'])

# Define the target column (this is the output column y)
y = df['category_encoded']

# Split the data into X_train, X_test, y_train, y_test, where the test_size is 20% with random_state 24
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=24)

# Fit the model
model = LogisticRegression(n_jobs=-1)
model.fit(X_train, y_train)

# Check model performance
y_pred = model.predict(X_test)
print(model.__class__.__name__)
print(classification_report(y_test, y_pred))

# Display the confusion matrix
conf_matrix = confusion_matrix(y_test, y_pred)
plt.figure(figsize=(8, 6))
sns.heatmap(conf_matrix, annot=True, fmt='d', cmap="YlGnBu", xticklabels=category_mapping.keys(), yticklabels=category_mapping.keys())
plt.xlabel('Predicted')
plt.ylabel('Actual')
plt.title('Confusion Matrix')
plt.savefig('confusion_matrix.png')

# Save the model and the vectorizer into pkl files
pickle.dump(model, open('test_model.pkl', 'wb'))
pickle.dump(vectorizer, open('test_vectorizer.pkl', 'wb'))
